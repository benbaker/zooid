/* Flatten das boostrap */
.panel-heading, .well-sm, .progress, .panel, .btn, .nav-justified, li a, .btn-group, .panel-footer, .nav>.active>a, .nav>a{
  -webkit-border-radius: 0px !important;
  -moz-border-radius: 0px !important;
  border-radius: 0px !important;
  background-image:none!important;
}
.btn-group{
  padding:0px;
  margin:0px;
}

html, body {
    margin: 0px;
    border: 0;
    display: block;  /* No floating content on sides */
}

html {
    height:100%;
}

.bg1{
  background-color: #f2f2f2;

}
.bg2{

  background-color: #d1d3d6;
  height:100%;
}
.bg3{
  background-color: #ffffff;
  height:100%;

}
.innerShadow{
  -webkit-box-shadow: inset 0 2px 6px rgba(0,0,0,0.2);
  box-shadow: inset 0 2px 6px rgba(0,0,0,0.2);
}


.bordered{

  border:1px solid #aaa!important;
}

#canvasWrapper{
  height:100%!important;
  width: 100%;
  height: 100%;
  margin: 0px;
  border: 0;

}

#image_canvas{
  top:0px!important;
}



.btn{
  -webkit-transition: background-color 0.2s, color 0.2s,   text-shadow 0.2s, border: 0.2s, -webkit-transform 0.2s;
  transition: background-color 0.2s, text-shadow 0.2s, color 0.2s, border: 0.2s, transform 0.2s;
}

.checkBox:focus{
  border:none!important;
}

.btn-important {
  
  color:white;
  background-color: #E74C3C;
}

.btn-important:hover {
  background-color: #E72C1C!important;
  color:#ffffff!important;
}


.navbar-brand{
  color:rgba(222,222,222,0.5);
}

#mapHolder {
    width:100%!important;
    height:100%!important;
   padding:0px!important;
}

#mapdiv{
  width:100%!important;
  margin:0px!important;
  padding:0px!important;
}

.text-subdued{
  color:#bbb!important;
}


.nopadv{
  padding-top:0px!important;
  padding-bottom:0px!important;
}

p{
  letter-spacing: 0.8px!important;
}
.text-white{
   color:#ddd!important;
}

.scootchup{
  margin-top:-3px;
}

.vmarg{
  margin-top:10px;
  margin-bottom:10px;
}

.front{
  z-index:999999999;
}



.huge{
   font-size:60px;
}
canvas.ol-unselectable{
   /*height:200%;*/
   margin:0px!important;
   padding:0px!important;
}

.bg-white{
  background-color: white;
}

#map {
}
#scissors_img {
  display: none;
  margin:0px;
  padding: 0px;
}
#container {
  margin:0px;
  padding: 0px;
  display: absolute;
}
.boxShadow {
   -webkit-box-shadow: 0 1px 6px rgba(0,0,0,0.4);
  box-shadow: 0 1px 6px rgba(0,0,0,0.4);
}
.boxShadowEasy {
   -webkit-box-shadow: 0 2px 6px rgba(0,0,0,0.4);
  box-shadow: 0 2px 6px rgba(0,0,0,0.4);
}


.fullH{
   height: 100%;

}
.scrollMe {
   overflow: hidden!important; 
}

@media only screen and (min-width : 768px) {
    /* Make Navigation Toggle on Desktop Hover */
    .dropdown:hover .dropdown-menu {
        display: block;
    }
}



/*
 * Default Layout Theme
 *
 * Created for jquery.layout 
 *
 * Copyright (c) 2010 
 *   Fabrizio Balliano (http://www.fabrizioballiano.net)
 *   Kevin Dalman (http://allpro.net)
 *
 * Dual licensed under the GPL (http://www.gnu.org/licenses/gpl.html)
 * and MIT (http://www.opensource.org/licenses/mit-license.php) licenses.
 *
 * Last Updated: 2010-02-10
 * NOTE: For best code readability, view this with a fixed-space font and tabs equal to 4-chars
 */

/*
 *  DEFAULT FONT
 *  Just to make demo-pages look better - not actually relevant to Layout!
 */

/*
 *  PANES & CONTENT-DIVs
 */
.ui-layout-pane { /* all 'panes' */
  border:   none!important;
  padding:  0px; 
  overflow: auto;



  /* DO NOT add scrolling (or padding) to 'panes' that have a content-div,
     otherwise you may get double-scrollbars - on the pane AND on the content-div
     - use ui-layout-wrapper class if pane has a content-div
     - use ui-layout-container if pane has an inner-layout
  */
  }
  /* (scrolling) content-div inside pane allows for fixed header(s) and/or footer(s) */
  .ui-layout-content {
    position: relative; /* contain floated or positioned elements */
    overflow: auto; /* add scrolling to content-div */
  }

/*
 *  UTILITY CLASSES
 *  Must come AFTER pane-class above so will override
 *  These classes are NOT auto-generated and are NOT used by Layout
 */
.layout-child-container,
.layout-content-container {
  padding:  0;
  overflow: hidden;
}
.layout-child-container {
  border:   0; /* remove border because inner-layout-panes probably have borders */
}
.layout-scroll {
  overflow: auto;
}
.layout-hide {
  display:  none;
}

/*
 *  RESIZER-BARS
 */
.ui-layout-resizer  { /* all 'resizer-bars' */
  background:   #fff;
  border:none!important;
  border-width: 0;
  }
  .ui-layout-resizer-drag {   /* REAL resizer while resize in progress */
  }
  .ui-layout-resizer-hover  { /* affects both open and closed states */
  }
  /* NOTE: It looks best when 'hover' and 'dragging' are set to the same color,
    otherwise color shifts while dragging when bar can't keep up with mouse */
  .ui-layout-resizer-open-hover , /* hover-color to 'resize' */
  .ui-layout-resizer-dragging { /* resizer beging 'dragging' */
    background: #C4E1A4;
  }
  .ui-layout-resizer-dragging { /* CLONED resizer being dragged */
    border:    1px solid #BBB;
  }
  .ui-layout-resizer-north-dragging,
  .ui-layout-resizer-south-dragging {
    border-width: 1px 0;
  }
  .ui-layout-resizer-west-dragging,
  .ui-layout-resizer-east-dragging {
    border-width: 0 1px;
  }
  /* NOTE: Add a 'dragging-limit' color to provide visual feedback when resizer hits min/max size limits */
  .ui-layout-resizer-dragging-limit { /* CLONED resizer at min or max size-limit */
    background: #E1A4A4; /* red */
  }

  .ui-layout-resizer-closed-hover { /* hover-color to 'slide open' */
    background: #EBD5AA;
  }
  .ui-layout-resizer-sliding {  /* resizer when pane is 'slid open' */
    opacity: .10; /* show only a slight shadow */
    filter:  alpha(opacity=10);
    }
    .ui-layout-resizer-sliding-hover {  /* sliding resizer - hover */
      opacity: 1.00; /* on-hover, show the resizer-bar normally */
      filter:  alpha(opacity=100);
    }
    /* sliding resizer - add 'outside-border' to resizer on-hover 
     * this sample illustrates how to target specific panes and states */
    .ui-layout-resizer-north-sliding-hover  { border-bottom-width:  3px; }
    .ui-layout-resizer-south-sliding-hover  { border-top-width:   3px; }
    .ui-layout-resizer-west-sliding-hover { border-right-width: 3px; }
    .ui-layout-resizer-east-sliding-hover { border-left-width:  3px; }

/*
 *  TOGGLER-BUTTONS
 */
.ui-layout-toggler {
  border: 1px solid #fff; /* match pane-border */
  }
  .ui-layout-resizer-hover .ui-layout-toggler {
    opacity: .60;
    filter:  alpha(opacity=60);
  }
  .ui-layout-toggler-hover , /* need when NOT resizable */
  .ui-layout-resizer-hover .ui-layout-toggler-hover { /* need specificity when IS resizable */
    background-color: #622;
    opacity: 1.00;
    filter:  alpha(opacity=100);
  }
  .ui-layout-toggler-north ,
  .ui-layout-toggler-south {
    border-width: 0 1px; /* left/right borders */
  }
  .ui-layout-toggler-west ,
  .ui-layout-toggler-east {
    border-width: 1px 0; /* top/bottom borders */
    margin:30px;
  }
  /* hide the toggler-button when the pane is 'slid open' */
  .ui-layout-resizer-sliding  .ui-layout-toggler {
    display: none;
  }
  /*
   *  style the text we put INSIDE the togglers
   */


/*
 *  PANE-MASKS
 *  these styles are hard-coded on mask elems, but are also 
 *  included here as !important to ensure will overrides any generic styles
 */
.ui-layout-mask {
  border:   none !important;
  padding:  0 !important;
  margin:   0 !important;
  overflow: hidden !important;
  position: absolute !important;
  opacity:  0 !important;
  filter:   Alpha(Opacity="0") !important;
}
.ui-layout-mask-inside-pane { /* masks always inside pane EXCEPT when pane is an iframe */
  top:    0 !important;
  left:   0 !important;
  width:    100% !important;
  height:   100% !important;
}
div.ui-layout-mask {}   /* standard mask for iframes */
iframe.ui-layout-mask {}  /* extra mask for objects/applets */

/*
 *  Default printing styles
 */
@media print {
  /*
   *  Unless you want to print the layout as it appears onscreen,
   *  these html/body styles are needed to allow the content to 'flow'
   */
  html {
    height:   auto !important;
    overflow: visible !important;
  }
  body.ui-layout-container {
    position: static !important;
    top:    auto !important;
    bottom:   auto !important;
    left:   auto !important;
    right:    auto !important;
    /* only IE6 has container width & height set by Layout */
    _width:   auto !important;
    _height:  auto !important;
  }
  .ui-layout-resizer, .ui-layout-toggler {
    display:  none !important;
  }
  /*
   *  Default pane print styles disables positioning, borders and backgrounds.
   *  You can modify these styles however it suit your needs.
   */
  .ui-layout-pane {
    border:   none !important;
    background:  transparent !important;
    position: relative !important;
    top:    auto !important;
    bottom:   auto !important;
    left:   auto !important;
    right:    auto !important;
    width:    auto !important;
    height:   auto !important;
    overflow: visible !important;
  }
}

.spinner {
    margin: 20px;
    -webkit-animation-name: spin;
    -webkit-animation-duration: 4000ms;
    -webkit-animation-iteration-count: infinite;
    -webkit-animation-timing-function: linear;
    -moz-animation-name: spin;
    -moz-animation-duration: 4000ms;
    -moz-animation-iteration-count: infinite;
    -moz-animation-timing-function: linear;
    -ms-animation-name: spin;
    -ms-animation-duration: 4000ms;
    -ms-animation-iteration-count: infinite;
    -ms-animation-timing-function: linear;
    
    animation-name: spin;
    animation-duration: 4000ms;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
}
@-ms-keyframes spin {
    from { -ms-transform: rotate(0deg); }
    to { -ms-transform: rotate(359deg); }
}
@-moz-keyframes spin {
    from { -moz-transform: rotate(0deg); }
    to { -moz-transform: rotate(359deg); }
}
@-webkit-keyframes spin {
    from { -webkit-transform: rotate(0deg); }
    to { -webkit-transform: rotate(359deg); }
}
@keyframes spin {
    from {
        transform:rotate(0deg);
    }
    to {
        transform:rotate(359deg);
    }
}

.spinner {
    margin: 20px;
    -webkit-animation-name: spin;
    -webkit-animation-duration: 4000ms;
    -webkit-animation-iteration-count: infinite;
    -webkit-animation-timing-function: linear;
    -moz-animation-name: spin;
    -moz-animation-duration: 4000ms;
    -moz-animation-iteration-count: infinite;
    -moz-animation-timing-function: linear;
    -ms-animation-name: spin;
    -ms-animation-duration: 4000ms;
    -ms-animation-iteration-count: infinite;
    -ms-animation-timing-function: linear;
    
    animation-name: spin;
    animation-duration: 4000ms;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
}
@-ms-keyframes spin {
    from { -ms-transform: rotate(0deg); }
    to { -ms-transform: rotate(359deg); }
}
@-moz-keyframes spin {
    from { -moz-transform: rotate(0deg); }
    to { -moz-transform: rotate(359deg); }
}
@-webkit-keyframes spin {
    from { -webkit-transform: rotate(0deg); }
    to { -webkit-transform: rotate(359deg); }
}
@keyframes spin {
    from {
        transform:rotate(0deg);
    }
    to {
        transform:rotate(359deg);
    }
}

.fa-spin{
  line-height: 1em;
  margin:0px;
}



/* Flatten das boostrap */
.panel-heading, .btn, .panel-footer, .nav>.active>a{
  -webkit-border-radius: 0px !important;
  -moz-border-radius: 0px !important;
  border-radius: 0px !important;
  background-image:none!important;
}








.fa-spin{
  line-height: 1em;
  margin:0px;
}






  #splitterContainer {
    background: 777;
    /* HEIGHT */
    height:   100%;         
    min-height: 600px;
    _height:  300px; /* min-height for IE6 */
    /* WIDTH */
    width:    100%;
    /* HORIZONTAL CENTERING */
    margin:   0 auto;
  }
  /*
   *  Container sizing
   *
   *  Borders and padding are normally *added* to the width/height of the DIV
   *  However you can get height:100% AND padding/borders by using a nested layout. 
   *  The outer-layout is just a single pane: center, which is where you add your vertical padding.
   *  Inside this is your *real layout*. 
   */
  #paddingWrapper {
    padding:  0px ;
  }
  .pane {
    display:  none; /* will appear when layout inits */
  }




