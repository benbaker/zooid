include index
block content
  script(src="/js/HighCharts.js")
  script(src="/js/HighCharts_custom.js")

  script.
        // make new instance of Model
        var signalModel = new $.eventModel();
        

        // ***** table everything



        // Listen for when things of this model type are created
        signalModel.on('created', function(info,activity) {
          var nm = (activity.data.name || activity.data.noun||activity.id).replace(/ /g,'').toLowerCase();

          $("#signalsTable").append($("<tr>",{
            class:"", 
            id:activity.id,
            href:"#"+nm, 

          }))

          $("#signalsTable ").find("#"+activity.id)
            .append(

              $("<td>",{
                id:'name',
                html:activity.data.name,
              }),
              $("<td>",{
                id:'noun',
                html:activity.data.noun,
              }),
              $("<td>",{
                id:'status',
                text:activity.data.text
              }),
              $("<td>",{
                id:'actions',
                text:activity.data.data
              }),
              $("<td>",{
                id:'id',
                class:"destroyer",
                text:activity.data.id,
                html:"<a class='btn btn-link'>X</a>"
              }).on("click", function(){ io.socket.post("/signal/destroy/"+activity.data.id, function(destroyed){
                console.log(destroyed);
                $("#"+destroyed.id).remove()
                })
              }),
              $("<td>",{
                id:'parent_id',
                text:activity.data.parent_id
              })

            )

        });


        // Listen for when things of this model type are updated
        signalModel.on('updated', function(info,activity) {
          console.log(activity)
          $.map(activity.data, function(val, key){
          console.log(val,":",key)

            if($("#"+activity.id+" #"+key).text())
              if($("#"+activity.id+" #"+key).text() != val)
              $("#"+activity.id+" #"+key).text(val)
            //- else $("#"+activity.id).append($("<div>",{id:key,text:val}))
          })
        });


        // bind dom to model with sockets
        function dom_glue(model){

          io.socket.on( model, function(activity){
              signalModel.emit(activity.verb, activity);
          })

          io.socket.get( "/"+model, {}, function(activities){

            $.map(activities, function(activity){
              console.log(activity)
              signalModel.emit('created', {
                id:activity.id,
                data:activity
              })

            })
            $("#signalsTable").DataTable();
          })

        }

        // When document is ready, grab latest things.
        $(document).ready(function(){

          // Apply the theme

          dom_glue("signal");


          /**
           * Tests the cluster, broadcasts "test" to all the zodes from the
           * controller and paints responses through normal socket flow.
           * @param  {[type]}  error
           * @return {[type]}   [description]
           */
          
          $(document).on('click', '.test_cluster', function(error){
            io.socket.post("/signal/test", {});
          })

        })




  .container
    .col-md-12
      hr
      table.table.table-condensed#signalsTable.display.panel
        thead
          tr
            th Name
            th Noun
            th Text
            th Data
            th Signal
            th Parent
        tbody
                

  br

  .jumbotron(style="background-color:#fff;")
    .container
      br
      .col-md-12
          //- span.scootRight
            a.btn.test_cluster.button.button-flat.button-small TEST
    .container
      .col-md-6
        include ../visualization/nouns_pie
      .col-md-6
        include ../visualization/nouns


  hr
  .container



  page