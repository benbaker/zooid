{
  "author": {
    "name": "Peter Müller",
    "email": "munter@fumle.dk",
    "url": "http://fumle.dk"
  },
  "name": "histogram",
  "version": "1.0.0",
  "description": "Provides a histogram data structure of png, gif and jpeg images using canvas. This library works in the browser as well",
  "keywords": [
    "histogram",
    "image",
    "png",
    "jpeg",
    "jpg",
    "gif"
  ],
  "maintainers": [
    {
      "name": "Peter Müller",
      "email": "munter@fumle.dk",
      "url": "http://fumle.dk"
    }
  ],
  "licenses": [
    {
      "type": "BeerWare"
    }
  ],
  "homepage": "http://munter.github.com/node-histogram",
  "repository": {
    "type": "git",
    "url": "git://github.com/Munter/node-histogram.git"
  },
  "files": [
    "lib",
    "histogram.min.js"
  ],
  "main": "lib/index.js",
  "dependencies": {
    "canvas": "^1.1.6"
  },
  "devDependencies": {
    "coveralls": "^2.11.1",
    "istanbul": "^0.3.0",
    "jshint": "^2.5.3",
    "mocha": "^1.21.4",
    "mocha-lcov-reporter": "0.0.1",
    "uglify-js": "^2.4.15",
    "unexpected": "^3.2.4"
  },
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "scripts": {
    "lint": "jshint .",
    "test": "npm run lint && mocha",
    "posttest": "uglifyjs lib/index.js -m -c > histogram.min.js",
    "travis": "npm run lint && NODE_ENV=development ./node_modules/.bin/istanbul cover ./node_modules/mocha/bin/_mocha -- --reporter dot && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
    "coverage": "NODE_ENV=development ./node_modules/.bin/istanbul cover ./node_modules/mocha/bin/_mocha -- --reporter dot"
  },
  "readme": "Histogram\n=========\n[![NPM version](https://badge.fury.io/js/histogram.png)](http://badge.fury.io/js/histogram)\n[![Build Status](https://travis-ci.org/Munter/node-histogram.png?branch=master)](https://travis-ci.org/Munter/node-histogram)\n[![Coverage Status](https://coveralls.io/repos/Munter/node-histogram/badge.png)](https://coveralls.io/r/Munter/node-histogram)\n[![Dependency Status](https://david-dm.org/Munter/node-histogram.png)](https://david-dm.org/Munter/node-histogram)\n\nProvides a histogram data structure from PNG, JPEG or GIF files using canvas.\nThis library works in nodejs and in any canvas supporting browser using <a href=\"https://raw.github.com/Munter/node-histogram/master/histogram.min.js\">histogram.min.js</a>.\nIn the browser histogram will be available in `window.histogram`\nYou can also use require.js instead, keeping your global scope clean.\n\n\nExample usage\n-------------\n\nNodeJS\n``` javascript\nvar histogram = require('histogram');\n\nhistogram(fileName || Buffer, function (err, data) {\n    console.log(filePath + ' has ' + data.colors.rgba + ' colors');\n});\n```\n\nBrowser with require.js\n``` javascript\nrequire(['path/to/histogram.min.js'], function (err, histogram) {\n    histogram(URL || FileReader.result, function (data) {\n        console.log(filePath + ' has ' + data.colors.rgba + ' colors');\n    });\n});\n```\n\nVanilla browser\n``` html\n<script src=\"path/to/histogram.min.js\"></script>\n<script>\n    histogram(URL || FileReader.result, function (err, data) {\n        console.log(filePath + ' has ' + data.colors.rgba + ' colors');\n    });\n</script>\n```\n\n\nData structure\n--------------\n``` javascript\n{\n    red: new Array(256), // Count of the number of times a value appears in the red channel\n    green: new Array(256), // Count of the number of times a value appears in the green channel\n    blue: new Array(256), // Count of the number of times a value appears in the blue channel\n    alpha: new Array(256), // Count of the number of times a value appears in the alpha channel\n\n    colors: {\n        rgb: 0, // Number of unique RGB colors\n        rgba: 0 // Number of unique RGBA colors\n    },\n\n    palettes: {\n        rgb: [], // Array of unique colors in hex notation\n        rgba: [] // Array of unique colors in hexa notation\n    },\n\n    greyscale: true, // Indicates whether all colors are greyscale or not\n    alphachannel: false // Indicates that one or more pixels are translucent\n}\n```\n\nLicense\n-------\nThis software is licensed under the beerware license. Do whatever you want with it.\nIf we meet some day, and you think this stuff is worth it, you can buy me a beer in return.\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/Munter/node-histogram/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/Munter/node-histogram/issues"
  },
  "_id": "histogram@1.0.0",
  "_from": "histogram@~1.0.0"
}
